{
  "name": "cd",
  "on": {
    "workflow_dispatch": null
  },
  "concurrency": {
    "group": "${{ github.workflow }}-${{ github.ref }}"
  },
  "permissions": {
    "contents": "read",
    "pages": "write",
    "id-token": "write"
  },
  "jobs": {
    "changes": {
      "runs-on": "ubuntu-latest",
      "steps": [
        { "uses": "actions/checkout@v4" },
        { "uses": "pnpm/action-setup@v4", "with": { "version": "latest", "run_install": false } },
        {
          "id": "enumerate",
          "run": "echo \"PACKAGES=$(git ls-files */package.json */*/package.json --exclude=.* --exclude=**/node_modules/* | jq --compact-output --raw-input --slurp 'split(\"\\n\")[:-1] | map(sub(\"/package.json$\"; \"\")) | reduce .[] as $key ({}; .[$key] = \"\\($key)/**\")')\" >> \"$GITHUB_OUTPUT\""
        },
        {
          "id": "base",
          "run": "echo \"TAG_NAME=$(gh run list --workflow=cd.yml --branch=main --json databaseId,status,headSha,conclusion --jq '[.[] | select(.status == \"completed\" and .conclusion == \"success\")][0].headSha')\" >> \"$GITHUB_OUTPUT\"",
          "env": {
            "GH_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
          }
        },
        {
          "if": "steps.enumerate.outputs.PACKAGES != '{}'",
          "uses": "dorny/paths-filter@v3",
          "id": "filter",
          "with": {
            "filters": "${{ steps.enumerate.outputs.PACKAGES }}"
          }
        }
      ],
      "outputs": {
        "packages": "${{ steps.filter.outputs.changes }}"
      },
      "timeout-minutes": 15
    },
    "release": {
      "if": "needs.changes.outputs.packages != '' && needs.changes.outputs.packages != '[]'",
      "runs-on": "ubuntu-latest",
      "needs": ["changes"],
      "strategy": {
        "fail-fast": false,
        "matrix": {
          "package": "${{ fromJSON(needs.changes.outputs.packages) }}"
        }
      },
      "steps": [
        { "uses": "actions/checkout@v4" },
        { "uses": "actions/setup-node@v4", "with": { "node-version": 22 } },
        { "uses": "pnpm/action-setup@v4", "with": { "version": "latest", "run_install": false } },
        {
          "uses": "actions/cache@v4",
          "with": {
            "path": "~/.pnpm-store",
            "key": "pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}",
            "restore-keys": "pnpm-store-${{ runner.os }}-"
          }
        },
        { "run": "pnpm install" },
        {
          "working-directory": "${{ matrix.package }}",
          "run": "pnpm run --if-present build"
        },
        {
          "env": {
            "GH_TOKEN": "${{ secrets.PAT }}"
          },
          "run": "for TAG in $(gh release list --json tagName,isDraft --jq '.[] | select(.isDraft) | .tagName'); do gh release delete -y \"$TAG\"; done"
        },
        {
          "id": "tag",
          "env": {
            "GH_TOKEN": "${{ secrets.PAT }}"
          },
          "run": "echo \"TAG_NAME=$(.github/workflows/scripts/tag.sh \"${{ matrix.package }}\")\" >> \"$GITHUB_OUTPUT\""
        },
        {
          "uses": "softprops/action-gh-release@v2",
          "with": {
            "draft": true,
            "tag_name": "${{ steps.tag.outputs.TAG_NAME }}",
            "token": "${{ secrets.PAT }}"
          }
        }
      ],
      "timeout-minutes": 15
    },
    "publish": {
      "runs-on": "ubuntu-latest",
      "needs": ["changes", "release"],
      "steps": [
        { "uses": "actions/checkout@v4" },
        { "uses": "actions/setup-node@v4", "with": { "node-version": 22 } },
        { "uses": "pnpm/action-setup@v4", "with": { "version": "latest", "run_install": false } },
        {
          "uses": "actions/cache@v4",
          "with": {
            "path": "~/.pnpm-store",
            "key": "pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}",
            "restore-keys": "pnpm-store-${{ runner.os }}-"
          }
        },
        {
          "env": {
            "GH_TOKEN": "${{ secrets.PAT }}"
          },
          "run": "(gh run download --name github-pages && tar -xvf artifact.tar --keep-old-files --directory docs/) || true"
        },
        { "run": "pnpm install" },
        {
          "env": {
            "GH_TOKEN": "${{ secrets.PAT }}"
          },
          "run": "for PACKAGE in $(jq --raw-output '.[]' <<< \"${{ needs.changes.outputs.packages }}\"); do .github/workflows/scripts/publish.sh \"$PACKAGE\"; done"
        },
        {
          "uses": "actions/upload-pages-artifact@v3",
          "with": {
            "path": "./docs"
          }
        }
      ],
      "timeout-minutes": 15
    },
    "deploy": {
      "runs-on": "ubuntu-latest",
      "environment": {
        "name": "github-pages",
        "url": "${{ steps.deployment.outputs.page_url }}"
      },
      "needs": ["publish"],
      "steps": [
        { "uses": "actions/deploy-pages@v4" }
      ],
      "timeout-minutes": 15
    }
  }
}
