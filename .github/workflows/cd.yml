{
  "name": "cd",
  "on": {
    "workflow_dispatch": null
  },
  "concurrency": {
    "group": "${{ github.workflow }}-${{ github.ref }}",
  },
  "permissions": {
    "contents": "read",
    "pages": "write",
    "id-token": "write"
  },
  "jobs": {
    "changes": {
      "runs-on": "ubuntu-latest",
      "steps": [
        { "uses": "actions/checkout@v4" },
        {
          "id": "enumerate",
          "run": "echo PACKAGES=\"$(find . -mindepth 2 -maxdepth 3 -name \"package.json\" -not -path \"*/.*\" -not -path \"*/node_modules/**\" -exec dirname {} + | jq --compact-output --null-input --raw-input --slurp 'input | split(\"\\n\")[:-1] | reduce .[][2:] as $key ({}; .[$key] = \"\\($key)/**\")')\" >> $GITHUB_OUTPUT"
        },
        {
          "if": "steps.enumerate.outputs.PACKAGES != '{}'",
          "uses": "dorny/paths-filter@v2",
          "id": "filter",
          "with": {
            "filters": "${{ steps.enumerate.outputs.PACKAGES }}"
          }
        }
      ],
      "outputs": {
        "packages": "${{ steps.filter.outputs.changes }}"
      },
      "timeout-minutes": 15
    },
    "release": {
      "if": "needs.changes.outputs.packages != '' && needs.changes.outputs.packages != '[]'",
      "runs-on": "ubuntu-latest",
      "needs": ["changes"],
      "strategy": {
        "fail-fast": false,
        "matrix": {
          "package": "${{ fromJSON(needs.changes.outputs.packages) }}"
        }
      },
      "steps": [
        { "uses": "actions/checkout@v3" },
        { "uses": "actions/setup-node@v3", "with": { "node-version": 22 } },
        { "run": "npm install" }, #{ "uses": "bahmutov/npm-install@v1", "with": { "useLockFile": false } },
        {
          "working-directory": "${{ matrix.package }}",
          "run": "npm run build --if-present"
        },

        {
          "id": "tag",
          "env": {
            "GH_TOKEN": "${{ secrets.PAT }}"
          },
          "working-directory": "${{ matrix.package }}",
          "run": "PACKAGE=\"${{ matrix.package }}\"; TAG_NAME=$(jq --raw-output 'select(.version != null and .version != \"\") | \"\\(.name)-\\(.version)\"' package.json || true); if [[ -z \"$TAG_NAME\" ]] || gh release list --json tagName --jq '.[].tagName' | grep -qx \"$TAG_NAME\"; then TAG_NAME=$(gh release list --json tagName --jq \"([.[] | select(.tagName | startswith(\\\"${PACKAGE}-\\\")) | .tagName] | map(sub(\\\"${PACKAGE}-\\\"; \\\"\\\")) | map(split(\\\".\\\") | map(tonumber)) | sort | last | if . == null then null else \\\"${PACKAGE}-\\\" + (map(tostring) | join(\\\".\\\")) end) // \\\"${PACKAGE}-0.1.0\\\"\"); fi; echo \"TAG_NAME=$TAG_NAME\" >> \"$GITHUB_OUTPUT\""
        },
        {
          "uses": "softprops/action-gh-release@v2",
          "with": {
            "tag_name": "${{ steps.tag.outputs.TAG_NAME }}",
            "token": "${{ secrets.PAT }}"
          }
        }
      ],
      "timeout-minutes": 15
    },
    "build": {
      "runs-on": "ubuntu-latest",
      "needs": ["changes", "release"],
      "steps": [
        { "uses": "actions/checkout@v4" },
        { "uses": "actions/setup-node@v4", "with": { "node-version": 22 } },

        { "run": "npm install" }, #{ "uses": "bahmutov/npm-install@v1", "with": { "useLockFile": false } },
        { "run": "npm run " }, # TODO

        { "run": "gh run download --name \"github-pages\""},
        { "run": "tar -xvf artifact.tar --keep-old-files --directory docs/" },

        {
          "uses": "actions/upload-pages-artifact@v3",
          "with": {
            "path": "./docs"
          }
        }
      ],
      "timeout-minutes": 15
    },
    "deploy": {
      "runs-on": "ubuntu-latest",
      "environment": {
        "name": "github-pages",
        "url": "${{ steps.deployment.outputs.page_url }}"
      },
      "needs": ["release"],
      "steps": [
        {
          "id": "deployment",
          "uses": "actions/deploy-pages@v4"
        }
      ],
      "timeout-minutes": 15
    }
  }
}
